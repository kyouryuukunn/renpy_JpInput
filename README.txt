Ren'Py用日本語IME

Ren'Pyで日本語入力に対応するプラットフォームはv7.4現在windows, macのみで、ブラウザ, androidを含むLinux, iphoneでは日本語入力できません。
そのためRen'Py上で動作する日本語用IMEおよびスクリーンキーボードを作成しました。
辞書はpubdic+プロジェクトの成果物であるかな漢字変換用辞書を元に作成したものを使用しています
pubdic+のライセンスは"Henkan_table.rpy"のヘッダを参照してください。READMEにpubdic+への謝辞を追加してください。

注意点
構文解析には対応しないため、漢字変換は単語単位のみとなります。
pygameでは半角/全角や変換キーのような日本語キーボードのキーにショートカットを設定ません。
ブラウザではブラウザ本体のショートカットとして認識される危険性があるためキーからの操作は非推奨です。


使用方法
圧縮ファイル内のファイルをgameフォルダの任意の場所に配置すれば読み込みます。
Ren'Py標準の入力関数であるrenpy.inputの代りにJpInput.jpinputを呼び出してください。
このときRen'Py標準のタッチキーボードとの多重起動を防ぐため、config.touch_keyboardはFalseにしてください。

関数説明
def jpinput(prompt, default='', with_none=None, linux_prompt='', mobile_prompt=''):
renpy.input関数に日本語IMEを組み込んだもので基本的な使用方法は同じです。JpInput名前空間にあるので呼び出し時はJpInput.jpinputで呼び出してください。

デフォルトで日本語入力対応のWin, Macでは通常のrenpy.inputを呼び出し、Linuxではキーボードから操作可能な、android, iphone,ブラウザ版ではスクリーンキーボードから操作可能な組み込みの日本語IMEを使用できるスクリーンを表示します。
ブラウザ版でもLinux同様にキーボードから操作できるようにもできますが、ブラウザにショートカットを割り当てられているとブラウザ側が優先されます。混乱の元なので非推奨です。普通のブラウザは文字キーに機能を割り当ててはいないと思いますが、vimperatorのようなカスタマイズをしている人がいると予測しない挙動をする可能性があります。

引数のほとんどはrenpy.inputに準拠するので公式ドキュメントをまずは確認ください。jpinputでは引数にlinux_prompt, mobile_promptが追加されており、それぞれLinuxとmobileデバイスから呼び出されたときに使用されるプロンプトで、なければpromptが使用されます。
本組み込みIMEでは漢字変換は単語単位のみとなるためlinux, mobileプロットフォーム向けのプロンプトには以下のような注意書きを推奨します。
"テキストを入力してください(漢字変換は単語単位のみです)。"
また、pygameでは半角/全角や変換キーのような日本語キーボードのキーにショートカットを設定できません。デフォルトではF1をひらがな、F2をカタカナ、F3を変換に割り振っていないるのでLinux上では以下のような注意書きをするとよいでしょう。
"テキストを入力してください(漢字変換は単語単位のみです。 F1:ひらがな, F2:カタカナ, F3:変換)。"

注意 length, allow, exclude, pixel_width, mask引数は機能しません。


設定項目
JpInput.rpyで次の項目を変更すればカーソルの色を変更できます。
    cursor_color = "#0FF" 
次の項目をTrueにするとモバイル版でもキーボードからの操作を受け付けます。
    allow_keyboard_in_mobile = False
スクリーンのデザインを変更したい方はJpInput.rpy上のjpinputまたは_jp_touch_keyboardスクリーンを編集してください。
特にスクリーンキーボードは使用しているフォントのサイズによってキーボードの段が上下でずれてくるので手動調整が必要となります。
スクリーンキーボードではローマ字入力を使用していますが、JpInput.JpInput("jp_inputted_text", "あ")のように始めから平仮名やカナで入力しても動作します(その場合JpInput.ime_modeは"hira"または"kana"にしてください)。
